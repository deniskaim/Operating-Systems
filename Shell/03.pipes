
Task: 03-a-0200.txt
Сортирайте /etc/passwd лексикографски по поле UserID.

Solution:
1) sort -t ':' -k 3,3 /etc/passwd
2) cat /etc/passwd | sort -t ':' -k 3,3

--------------------

Task:  03-a-0201.txt
Сортирайте /etc/passwd числово по поле UserID.
(Открийте разликите с лексикографската сортировка)

Solution:
1) sort -n -t ':' -k 3,3 /etc/passwd
2) cat /etc/passwd | sort -n -t ':' -k 3,3

--------------------

Task: 03-a-0210.txt
Изведете само 1-ва и 5-та колона на файла /etc/passwd спрямо разделител ":".

Solution:
1) cut -d ':' -f 1,5 /etc/passwd
2) cat /etc/passwd | cut -d ':' -f 1,5

--------------------

Task: 03-a-0211.txt
Изведете съдържанието на файла /etc/passwd от 2-ри до 6-ти символ.

Solution:
cat /etc/passwd | tr -d '\n' | cut -c 2-6

--------------------

Task: 03-a-0212.txt
Отпечатайте потребителските имена и техните home директории от /etc/passwd.

Solution:
1) cut -d ':' -f 1,6 /etc/passwd
2) cat /etc/passwd | cut -d ':' -f 1,6

--------------------

Task: 03-a-0213.txt
Отпечатайте втората колона на /etc/passwd, разделена спрямо символ '/'.

Solution:
1) cut -d '/' -f 2 /etc/passwd
2) cat /etc/passwd | cut -d '/' -f 2

--------------------

Task: 03-a-1500.txt
Изведете броя на байтовете в /etc/passwd.
Изведете броя на символите в /etc/passwd.
Изведете броя на редовете  в /etc/passwd.

Solution:
wc -c -m -l /etc/passwd
или
cat /etc/passwd | wc -c
cat /etc/passwd | wc -m
cat /etc/passwd | wc -l
или
cat /etc/passwd | wc -c -m -l
--------------------

Task: 03-a-2000.txt
С отделни команди, извадете от файл /etc/passwd:
- първите 12 реда
- първите 26 символа
- всички редове, освен последните 4
- последните 17 реда
- 151-я ред (или друг произволен, ако нямате достатъчно редове)
- последните 4 символа от 13-ти ред (символът за нов ред не е част от реда)

Solution:
head -n 12 /etc/passwd
cat /etc/passwd | tr -d '\n' | cut -c 1-26
head -n -4 /etc/passwd
tail -n 17 /etc/passwd
head -n 151 /etc/passwd | tail -n 1
head -n 13 /etc/passwd | tail -n 1 | rev | cut -c 1-4 | rev 

--------------------

Task:  03-a-3000.txt
Запаметете във файл в своята home директория резултатът от командата `df -P`.

Напишете команда, която извежда на екрана съдържанието на този файл, без първия ред (хедъра), сортирано по второ поле (numeric).

Solution:
df -P > ~/03-a-3000_result.txt
cat ~/03-a-3000_result.txt | tail -n +2 | tr -s ' ' | sort -n -t ' ' -k 2,2

--------------------

Task:  03-a-3100.txt
Запазете само потребителските имена от /etc/passwd във файл users във вашата home директория.

Solution:
cat /etc/passwd | cut -d ':' -f 1 > ~/users

--------------------

Task: 03-a-3500.txt
Изпишете всички usernames от /etc/passwd с главни букви.

Solution:
cat /etc/passwd | cut -d ':' -f 1 | tr a-z A-Z

--------------------

Task: 03-a-5000.txt
1) Изведете реда от /etc/passwd, на който има информация за вашия потребител.

2) Изведедете този ред и двата реда преди него.

3) Изведете този ред, двата преди него, и трите след него.

4) Изведете *само* реда, който се намира 2 реда преди реда, съдържащ информация за вашия потребител.

Solution:
1) grep $(id -un) /etc/passwd
2) grep $(id -un) -B 2 /etc/passwd
3) grep $(id -un) -B 2 -A 3 /etc/passwd
4) grep $(id -un) -B 2 /etc/passwd | head -n 1
Добра практика: grep "^$(id -un)' /etc/passwd или grep "^$(whoami) /etc/passwd
--------------------

Task: 03-a-5001.txt
Изведете колко потребители не изпозват /bin/bash за login shell според /etc/passwd

Solution:
1) grep -v -c '/bin/bash' /etc/passwd
2) grep -v '/bin/bash' /etc/passwd | wc -l

--------------------

Task: 03-a-5002.txt
Изведете само имената на хората с второ име по-дълго от 6 (>6) символа според /etc/passwd

Solution:
cat /etc/passwd | cut -d ':' -f 5 | grep -E -o '^[^ ]+ [^ ,]{7,}'

--------------------

Task: 03-a-5003.txt
Изведете имената на хората с второ име по-късо от 8 (<=7) символа според /etc/passwd // !(>7) = ?

Solution:
cat /etc/passwd | cut -d ':' -f 5 | cut -d ',' -f 1 | grep -E -o '^[^ ]+ [^ ,]{1,7}$'

--------------------

Task: 03-a-5004.txt
Изведете целите редове от /etc/passwd за хората от 03-a-5003

Solution:
grep -E "$(cut -d ':' -f 5 /etc/passwd | cut -d ',' -f 1 | grep -E -o '^[^ ]+ [^ ,]{1,7}$')" /etc/passwd

--------------------

Task:  03-a-6000.txt
Копирайте <РЕПО>/exercises/data/emp.data във вашата home директория.
Посредством awk, използвайки копирания файл за входнни данни, изведете:

- общия брой редове
- третия ред
- последното поле от всеки ред
- последното поле на последния ред
- всеки ред, който има повече от 4 полета
- всеки ред, чието последно поле е по-голямо от 4
- общия брой полета във всички редове
- броя редове, в които се среща низът Beth
- най-голямото трето поле и редът, който го съдържа
- всеки ред, който има поне едно поле
- всеки ред, който има повече от 17 знака
- броя на полетата във всеки ред и самият ред
- първите две полета от всеки ред, с разменени места
- всеки ред така, че първите две полета да са с разменени места
- всеки ред така, че на мястото на първото поле да има номер на реда
- всеки ред без второто поле
- за всеки ред, сумата от второ и трето поле
- сумата на второ и трето поле от всеки ред

Solution:
(TO DO)

--------------------

Task: 03-b-0300.txt
Намерете само Group ID-то си от файлa /etc/passwd.

Solution:
grep $(id -u) /etc/passwd | cut -d ':' -f 4

--------------------

Task: 03-b-3400.txt
Колко коментара има във файла /etc/services ? Коментарите се маркират със символа #, след който всеки символ на реда се счита за коментар.

Solution:
grep -E '#' /etc/services | wc -m

--------------------

Task: 03-b-3500.txt
Колко файлове в /bin са 'shell script'-oве? (Колко файлове в дадена директория са ASCII text?)

Solution:
grep -E -r '#!/bin/bash' /bin | wc -l (???)

--------------------

Task: 03-b-3600.txt
Направете списък с директориите на вашата файлова система, до които нямате достъп. 
Понеже файловата система може да е много голяма, търсете до 3 нива на дълбочина.

Solution:
find / -maxdepth 3 -type d ! -executable 2>/dev/null

--------------------
(TO DO) - 03-b-4*.txt

--------------------

Task: 03-b-5200.txt
Намерете броя на символите, различни от буквата 'а' във файла /etc/passwd

Solution:
grep -E -o '[^a]' /etc/passwd | wc -l

--------------------

Task: 03-b-5300.txt
Намерете броя на уникалните символи, използвани в имената на потребителите от
/etc/passwd.

Solution:
cut -d ':' -f 1 /etc/passwd | fold -w 1 | sort | uniq | wc -l

--------------------

Task: 03-b-5400.txt
Отпечатайте всички редове на файла /etc/passwd, които не съдържат символния низ 'ов'.

Solution:
grep -E -v 'ов' /etc/passwd

--------------------

Task: 03-b-6100.txt
Отпечатайте последната цифра на UID на всички редове между 28-ми и 46-ред в /etc/passwd.

Solution:
1) head -n 46 /etc/passwd | tail -n +28 | cut -d ':' -f 3 | rev | cut -c 1
2) head -n 46 /etc/passwd | tail -n +28 | cut -d ':' -f 3 | grep -E -o '[0-9]$'

--------------------

Task: 03-b-6700.txt
Отпечатайте правата (permissions) и имената на всички файлове, до които имате
read достъп, намиращи се в директорията /tmp. (hint: 'man find', вижте -readable)

Solution:
find /tmp -type f -readable -printf '%M %f\n'

--------------------

Task: 03-b-6900.txt
Намерете имената на 10-те файла във вашата home директория, чието съдържание е
редактирано най-скоро. На първо място трябва да бъде най-скоро редактираният
файл. Намерете 10-те най-скоро достъпени файлове. (hint: Unix time)

Solution:
find ~ -type f -printf '%f %T@\n' | sort -n -r -t ' ' -k 2 | head | cut -d ' ' -f 1
find ~ -type f -printf '%f %A@\n' | sort -n -r -t ' ' -k 2 | head | cut -d ' ' -f 1

--------------------

Task:  03-b-7000.txt
да приемем, че файловете, които съдържат C код, завършват на `.c` или `.h`.
1) Колко на брой са те в директорията `/usr/include`?
2) Колко реда C код има в тези файлове?

Solution:
1) find /usr/include -type f -name '*.c' -o -name '*.h' | wc -l
2) find /usr/include -type f -name "*.c" -o -name "*.h" -exec wc -l {} \;

--------------------

Task: 03-b-7500.txt
Даден ви е ASCII текстов файл - /etc/services. Отпечатайте хистограма на 10-те най-често срещани думи.
Дума наричаме непразна последователност от букви. Не правим разлика между главни и малки букви.
Хистограма наричаме поредица от редове, всеки от които има вида:
<брой срещания> <какво се среща толкова пъти>

Solution:
cat /etc/services | tr '\t ' '\n' | tr -s '\n' | sort | uniq -c | sort -n -r -t ' ' -k 1 | head

--------------------

Task: 03-b-8000.txt
Вземете факултетните номера на студентите (описани във файла
<РЕПО>/exercises/data/mypasswd.txt) от СИ и ги запишете във файл si.txt сортирани.

Студент е част от СИ, ако home директорията на този потребител (според
<РЕПО>/exercises/data/mypasswd.txt) се намира в /home/SI директорията.

Solution:
grep '/home/SI' /srv/fmi-os/exercises/data/mypasswd.txt | cut -d ':' -f 1 | sort -n > ~/si.txt

-------------------

Task: 03-b-8500.txt
За всяка група от /etc/group изпишете "Hello, <група>", като ако това е вашата група, напишете "Hello, <група> - I am here!".

Solution:
(TO DO)

-------------------

Task: 03-b-8600.txt
Shell Script-овете са файлове, които по конвенция имат разширение .sh. Всеки
такъв файл започва с "#!<interpreter>" , където <interpreter> указва на
операционната система какъв интерпретатор да пусне (пр: "#!/bin/bash",
"#!/usr/bin/python3 -u").

Намерете всички .sh файлове в директорията `/usr` и нейните поддиректории, и
проверете кой е най-често използваният интерпретатор.

Solution:
find /usr -type f -name '*.sh' -exec head -n 1 {} \; | grep -E '^#!' | cut -d '!' -f 2 | tr -d ' ' | sort | uniq -c | sort -n -r -t ' ' -k 1 | head -n 1 | tr -s ' ' | cut -d ' ' -f 3

-------------------

Task:  03-b-8700.txt
1. Изведете GID-овете на 5-те най-големи групи спрямо броя потребители, за които
съответната група е основна (primary).

2. (*) Изведете имената на съответните групи.

Solution:
1) cut -d ':' -f 4 /etc/passwd | sort | uniq -c | sort -n -r -t ' ' -k 1 | tr -s ' ' | cut -d ' ' -f 3 | head -n 5
2) (TO DO)

-------------------

Task: 03-b-9000.txt
Направете файл eternity. Намерете всички файлове, намиращи се във вашата home
директория и нейните поддиректории, които са били модифицирани в последните
15мин (по възможност изключете .).  Запишете във eternity името (път) на
файла и времето (unix time) на последната промяна.

Solution:
find ~ -type f ! -name 'eternity' -mmin -15 -printf '%p %T@\n' > ~/eternity

-------------------

Task: 03-b-9050.txt
Копирайте файл <РЕПО>/exercises/data/population.csv във вашата home директория.

Solution:
cp /srv/fmi-os/exercises/data/population.csv ~

-------------------

Task: 03-b-9051.txt
Използвайки файл population.csv, намерете колко е общото население на света
през 2008 година. А през 2016?

Solution:
(TO DO)

-------------------

Task: 03-b-9052.txt
Използвайки файл population.csv, намерете през коя година в България има най-много население.

Solution:
grep -E '^Bulgaria.*$' ~/population.csv | cut -d ',' -f 3,4 | sort -n -r -t ',' -k 2 | head -n 1 | cut -d ',' -f1

-------------------

Task: 03-b-9053.txt
Използвайки файл population.csv, намерете коя държава има най-много население през 2016. А коя е с най-малко население?
(Hint: Погледнете имената на държавите)

Solution:
(TO DO)

