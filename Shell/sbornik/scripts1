
Зад.17 2016-SE-01
Напишете shell скрипт, който по подаден един позиционен параметър,ако този параметър
 е директория, намира всички symlink-ове в нея и под-директориите ѝ с несъществуващ destination.

Solution:
#!/bin/bash

if [[ "${#}" -ne 1 ]]; then
    echo "Invalid arguments count!"
    exit 1
fi

if [[ ! -d "${1}" ]]; then
    echo "Not a valid directory!"
    exit 2
fi

find "${1}" -type l ! -exec test -e {} \; -print


--------------------------------------------------------
 Зад. 18 2016-SE-02
Напишете shell скрипт, който приема един позиционен параметър-число. 
Ако скриптът се изпълнява като root, да извежда обобщена информация за общото количество активна памет (RSS- resident set size, non-swapped physical memory that a task has used) на процесите на всеки потребител.
Ако за някой потребител обобщеното число надвишава подадения параметър,да изпраща подходящи сигнали за прекратяване на процеса с най-много активна памет на потребителя.

Solution:
 #!/bin/bash
  2
  3 if [[ ${#} -ne 1 ]]; then
  4     echo "Illegal arguments count!"
  5     exit 1
  6 fi
  7
  8 if ! echo "${1}" | grep -q -E '^([1-9]+[0-9]*|0)$'; then
  9     echo "The argument must be a number!"
 10     exit 2
 11 fi
 12
 13 if [[ ! $(id -u) -ne 0 ]]; then
 14     echo "The script must be run by root"
 15     exit 3
 16 fi
 17
 18 upperBoundRSS="${1}"
 19 count=0
 20
 21 function calculateUserRSS {
 22     while read userRSS; do
 23         count=$((count + ${userRSS}))
 24     done < <(ps -u "${1}" -o rss=)
 25 }
 26
 27 function killUsersMostActiveProcess {
 28     pid=$(ps -u "${1}" -o pid=,rss= | sort -n -r -t ' ' -k 2,2 | head -n 1 | cut -d ' ' -f 2)
 29     kill "${pid}"
 30 }
 31
 32 while read processLine; do
 33     uid=$(echo "${processLine}" | cut -d ' ' -f 2)
 34     count=0
 35     calculateUserRSS "${uid}"
 36     echo "${uid}" has "${count}" RSS
 37
 38     if [[ "${count}" -gt "${upperBoundRSS}" ]]; then
 39         echo "I AM IN"
 40         killUsersMostActiveProcess "${uid}"
 41     fi
 42
 43 done < <(ps -e -o uid= | sort -n | uniq | tr -s ' ')

--------------------------------------------------------
Зад. 19 2016-SE-03 
Напишете shell скрипт който, ако се изпълнява от root, проверява кои потребители на
 системата нямат homedir или не могат да пишат в него.

 Примерен формат:
 root:x:0:0:root:/root:/bin/bash
 daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
 bin:x:2:2:bin:/bin:/usr/sbin/nologin

Solution:
#!/bin/bash
  2
  3 if [[ $(id -u) -eq 0 ]]; then
  4     echo "Script must be run as root"
  5     exit 1
  6 fi
  7
  8 # All users who don't have a home directory
  9 cat /etc/passwd | awk -F ':' '$6 !~ /^\/home\// {print $1}'
 10
 11 # All users who don't W permission in their home directory
 12 for homeDir in $(cat /etc/passwd | awk -F ':' '$6 ~ /^\/home\// {print $6}'); do
 13     perm=$(stat -c "%a" "${homeDir}" | cut -c 1)
 14
 15     if [[ "${perm}" -eq 0 || "${perm}" -eq 1 || "${perm}" -eq 4 || "${perm}" -eq 5 ]]; then
 16         echo "${homeDir}"
 17         echo $(stat -c "%U" "${homeDir}")
 18     fi
 19 done
--------------------------------------------------------


--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------
--------------------------------------------------------

