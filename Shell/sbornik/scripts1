
–ó–∞–¥.17 2016-SE-01
–ù–∞–ø–∏—à–µ—Ç–µ shell —Å–∫—Ä–∏–ø—Ç, –∫–æ–π—Ç–æ –ø–æ –ø–æ–¥–∞–¥–µ–Ω –µ–¥–∏–Ω –ø–æ–∑–∏—Ü–∏–æ–Ω–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä,–∞–∫–æ —Ç–æ–∑–∏ –ø–∞—Ä–∞–º–µ—Ç—ä—Ä
 –µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è, –Ω–∞–º–∏—Ä–∞ –≤—Å–∏—á–∫–∏ symlink-–æ–≤–µ –≤ –Ω–µ—è –∏ –ø–æ–¥-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏—Ç–µ —ù —Å –Ω–µ—Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â destination.

Solution:
#!/bin/bash

if [[ "${#}" -ne 1 ]]; then
    echo "Invalid arguments count!"
    exit 1
fi

if [[ ! -d "${1}" ]]; then
    echo "Not a valid directory!"
    exit 2
fi

find "${1}" -type l ! -exec test -e {} \; -print


--------------------------------------------------------
 –ó–∞–¥. 18 2016-SE-02
–ù–∞–ø–∏—à–µ—Ç–µ shell —Å–∫—Ä–∏–ø—Ç, –∫–æ–π—Ç–æ –ø—Ä–∏–µ–º–∞ –µ–¥–∏–Ω –ø–æ–∑–∏—Ü–∏–æ–Ω–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä-—á–∏—Å–ª–æ. 
–ê–∫–æ —Å–∫—Ä–∏–ø—Ç—ä—Ç —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –∫–∞—Ç–æ root, –¥–∞ –∏–∑–≤–µ–∂–¥–∞ –æ–±–æ–±—â–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –æ–±—â–æ—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω–∞ –ø–∞–º–µ—Ç (RSS- resident set size, non-swapped physical memory that a task has used) –Ω–∞ –ø—Ä–æ—Ü–µ—Å–∏—Ç–µ –Ω–∞ –≤—Å–µ–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª.
–ê–∫–æ –∑–∞ –Ω—è–∫–æ–π –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –æ–±–æ–±—â–µ–Ω–æ—Ç–æ —á–∏—Å–ª–æ –Ω–∞–¥–≤–∏—à–∞–≤–∞ –ø–æ–¥–∞–¥–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—ä—Ä,–¥–∞ –∏–∑–ø—Ä–∞—â–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏ —Å–∏–≥–Ω–∞–ª–∏ –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ü–µ—Å–∞ —Å –Ω–∞–π-–º–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–∞ –ø–∞–º–µ—Ç –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è.

Solution:
#!/bin/bash

if [[ ${#} -ne 1 ]]; then
    echo "Illegal arguments count!"
    exit 1
fi

if ! echo "${1}" | grep -q -E '^([1-9]+[0-9]*|0)$'; then
    echo "The argument must be a number!"
    exit 2
fi

if [[ ! $(id -u) -ne 0 ]]; then
    echo "The script must be run by root"
    exit 3
fi

upperBoundRSS="${1}"
count=0

function calculateUserRSS {
    while read userRSS; do
        count=$((count + ${userRSS}))
    done < <(ps -u "${1}" -o rss=)
}

function killUsersMostActiveProcess {
    pid=$(ps -u "${1}" -o pid=,rss= | sort -n -r -t ' ' -k 2,2 | head -n 1 | cut -d ' ' -f 2)
    kill "${pid}"
}

while read processLine; do
    uid=$(echo "${processLine}" | cut -d ' ' -f 2)
    count=0
    calculateUserRSS "${uid}"
    echo "${uid}" has "${count}" RSS

    if [[ "${count}" -gt "${upperBoundRSS}" ]]; then
        echo "I AM IN"
        killUsersMostActiveProcess "${uid}"
    fi

done < <(ps -e -o uid= | sort -n | uniq | tr -s ' ')

--------------------------------------------------------
–ó–∞–¥. 19 2016-SE-03 
–ù–∞–ø–∏—à–µ—Ç–µ shell —Å–∫—Ä–∏–ø—Ç –∫–æ–π—Ç–æ, –∞–∫–æ —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –æ—Ç root, –ø—Ä–æ–≤–µ—Ä—è–≤–∞ –∫–æ–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –Ω–∞
 —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –Ω—è–º–∞—Ç homedir –∏–ª–∏ –Ω–µ –º–æ–≥–∞—Ç –¥–∞ –ø–∏—à–∞—Ç –≤ –Ω–µ–≥–æ.

 –ü—Ä–∏–º–µ—Ä–µ–Ω —Ñ–æ—Ä–º–∞—Ç:
 root:x:0:0:root:/root:/bin/bash
 daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
 bin:x:2:2:bin:/bin:/usr/sbin/nologin

Solution:
#!/bin/bash

if [[ $(id -u) -eq 0 ]]; then
    echo "Script must be run as root"
    exit 1
fi

# All users who don't have a home directory
cat /etc/passwd | awk -F ':' '$6 !~ /^\/home\// {print $1}'

# All users who don't W permission in their home directory
for homeDir in $(cat /etc/passwd | awk -F ':' '$6 ~ /^\/home\// {print $6}'); do
    perm=$(stat -c "%a" "${homeDir}" | cut -c 1)

    if [[ "${perm}" -eq 0 || "${perm}" -eq 1 || "${perm}" -eq 4 || "${perm}" -eq 5 ]]; then
        echo "${homeDir}"
        echo $(stat -c "%U" "${homeDir}")
    fi
done

--------------------------------------------------------

–ó–∞–¥. 20 2016-SE-04
–í —Ç–µ–∫—É—â–∞—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–º–∞ —Å–∞–º–æ –æ–±–∏–∫–Ω–æ–≤–µ–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ (–±–µ–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏). –î–∞ —Å–µ –Ω–∞–ø–∏—à–µ bash script, –∫–æ–π—Ç–æ –ø—Ä–∏–µ–º–∞ 2 –ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—ä—Ä–∞ ‚Äì —á–∏—Å–ª–∞, –∫–æ–π—Ç–æ –º–µ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤–µ—Ç–µ –æ—Ç —Ç–µ–∫—É—â–∞—Ç–∞ 
–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫—ä–º –Ω–æ–≤–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (a, b –∏ c, –∫–æ–∏—Ç–æ —Ç—Ä—è–±–≤–∞ –¥–∞ –±—ä–¥–∞—Ç —Å—ä–∑–¥–∞–¥–µ–Ω–∏), –∫–∞—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Ñ–∞–π–ª —Å–µ –º–µ—Å—Ç–∏:

–∫—ä–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ‚Äôa‚Äô, —Å–∞–º–æ –∞–∫–æ —Ç–æ–π –∏–º–∞ –ø–æ-–º–∞–ª–∫–æ —Ä–µ–¥–æ–≤–µ –æ—Ç –ø—ä—Ä–≤–∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä, –º–µ—Å—Ç–∏
–∫—ä–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ‚Äôb‚Äô, –∞–∫–æ —Ä–µ–¥–æ–≤–µ —Å–∞ –º–µ–∂–¥—É –ø—ä—Ä–≤–∏ –∏ –≤—Ç–æ—Ä–∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—ä—Ä 
–∏ –≤ ‚Äôc‚Äô –≤ –æ—Å—Ç–∞–Ω–∞–ª–∏—Ç–µ —Å–ª—É—á–∞–∏.

Solution:
#!/bin/bash

if [[ "${#}" -ne 2 ]]; then
    echo "Illegal arguments count"
    exit 1
fi

if ! echo ${1} | grep -q -E '^([1-9]+[0-9]*|0)$'; then
    echo "Argument 1 must be a number!"
    exit 2
fi

if ! echo ${2} | grep -q -E '^([1-9]+[0-9]*|0)$'; then
    echo "Argument 2 must be a number!"
    exit 3
fi

mkdir -p ./{a,b,c}

for file in $(realpath $(find . -type f)); do
    linesCount=$(cat "${file}" | wc -l)
    if [[ "${linesCount}" -lt "${1}" ]]; then
        mv "${file}" ./a
    elif [[ "${linesCount}" -ge "${1}" && "${linesCount}" -le "${2}" ]]; then
        mv "${file}" ./b
    else
        mv "${file}" ./c
    fi
done

--------------------------------------------------------

–ó–∞–¥. 21 2016-SE-05
–§–∞–π–ª–æ–≤–µ—Ç–µ –≤—ä–≤ –≤–∞—à–∞—Ç–∞ home –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—ä–¥—ä—Ä–∂–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –º—É–∑–∏–∫–∞–ª–Ω–∏ –∞–ª–±—É–º–∏ –∏ –∏–º–∞—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞. 
–ù–∞—á–∞–ª–æ—Ç–æ –Ω–∞ –≤—Å–µ–∫–∏ —Ä–µ–¥ –µ –≥–æ–¥–∏–Ω–∞—Ç–∞ –Ω–∞ –∏–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∞–ª–±—É–º–∞, –∞ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–æ, —Å–ª–µ–¥ –Ω–∞—á–∞–ª–æ—Ç–æ –Ω–∞ –≤—Å–µ–∫–∏ —Ä–µ–¥ —Å–ª–µ–¥–≤–∞ –∏–º–µ—Ç–æ –Ω–∞ –∏–∑–ø—ä–ª–∏—Ç–µ–ª—è –Ω–∞ –ø–µ—Å–µ–Ω—Ç–∞. 
–ò–º–µ–Ω–∞—Ç–∞ –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ—Ç–µ —Å–µ —Å—ä—Å—Ç–æ—è—Ç –æ—Ç –µ–¥–Ω–∞ –¥—É–º–∞, –∫–æ—è—Ç–æ —Å—ä–≤–ø–∞–¥–∞ —Å –∏–º–µ—Ç–æ –Ω–∞ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª—è.

–î–∞ —Å–µ –Ω–∞–ø–∏—à–µ shell —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–µ–º–∞—â –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—ä—Ä–∞, –∫–æ–∏—Ç–æ —Å–∞ –∏–º–µ–Ω–∞ –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ –æ—Ç –≤–∞—à–∞—Ç–∞ home –¥–∏
—Ä–µ–∫—Ç–æ—Ä–∏—è. –°–∫—Ä–∏–ø—Ç—ä—Ç —Å—Ä–∞–≤–Ω—è–≤–∞, –∫–æ–π –æ—Ç –¥–≤–∞—Ç–∞ —Ñ–∞–π–ª–∞ –∏–º–∞ –ø–æ–≤–µ—á–µ –Ω–∞ –±—Ä–æ–π —Ä–µ–¥–æ–≤–µ, —Å—ä–¥—ä—Ä–∂–∞—â–∏ –Ω–µ–≥–æ–≤–æ—Ç–æ
 –∏–º–µ(–Ω–∞ —Ñ–∞–π–ª–∞). –ó–∞ —Ñ–∞–π–ª—ä—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª –∏–∑–ø—ä–ª–Ω–µ—Ç–µ —Å–ª–µ–¥–Ω–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è:
 ‚Ä¢ –∏–∑–≤–ª–µ—á–µ—Ç–µ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ –º—É, –±–µ–∑ –≥–æ–¥–∏–Ω–∞—Ç–∞ –Ω–∞ –∏–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∞–ª–±—É–º–∞ –∏ –±–µ–∑ –∏–º–µ—Ç–æ –Ω–∞ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª—è
 ‚Ä¢ —Å–æ—Ä—Ç–∏—Ä–∞–π—Ç–µ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ–Ω–æ—Ç–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ –∏ –≥–æ –∑–∞–ø–∏—à–µ—Ç–µ –≤—ä–≤ —Ñ–∞–π–ª —Å –∏–º–µ ‚Äô–∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª.songs‚Äô

Solution:
#!/bin/bash

if [[ "${#}" -ne 2 ]]; then
    echo "Illegal arguments count"
    exit 1
fi

if [[ ! -f "${1}" ]]; then
    echo "String 1 does not represent the name of a file!"
    exit 2
fi

if [[ ! -f "${2}" ]]; then
    echo "String 2 does not represent the name of a file!"
    exit 3
fi

rowsCount1=$(cat "${1}" | grep -E '^.*${1}' | wc -l)
rowsCount2=$(cat "${2}" | grep -E '^.*${2}' | wc -l)

resultname=""

if [[ "${rowsCount1}" -gt "${rowsCount2}" ]]; then
    resultname="${1}"
else
    resultname="${2}"
fi

grep -E -o '\".*' "${resultname}" | sort > "${resultname}".songs

--------------------------------------------------------
–ó–∞–¥. 22 2016-SE-06:
–ò–º–∞—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤ —Ñ–∞–π–ª —Å—ä—Å —Å–ª–µ–¥–Ω–æ—Ç–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ (–≤—Å—è–∫–∞ –∫–Ω–∏–≥–∞ –µ –Ω–∞ –µ–¥–∏–Ω —Ä–µ–¥)
–ù–∞–ø–∏—à–µ—Ç–µ shell script (–ø—Ä–∏–µ–º–∞—â –∞—Ä–≥—É–º–µ–Ω—Ç –∏–º–µ –Ω–∞ —Ñ–∞–π–ª) –∫–æ–π—Ç–æ –∏–∑–≤–µ–∂–¥–∞:
 ‚Ä¢ –≤—Å–µ–∫–∏ —Ä–µ–¥ –æ—Ç—Ñ–∞–π–ª–∞—Å–¥–æ–±–∞–≤–µ–Ω –ø–æ—Ä–µ–¥–µ–Ω –Ω–æ–º–µ—Ä –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç"1. ","2. "
 ‚Ä¢ –º–∞—Ö–∞—Ç –¥–∞–Ω–Ω–∏—Ç–µ –∑–∞ –≥–æ–¥–∏–Ω–∞—Ç–∞ –Ω–∞ –∏–∑–¥–∞–≤–∞–Ω–µ
 ‚Ä¢ —Å–æ—Ä—Ç–∏—Ä–∞—Ç –∏–∑—Ö–æ–¥–∞ –ø–æ –∑–∞–≥–ª–∞–≤–∏–µ (–ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ—Å–∫–∏, –≤—ä–∑—Ö–æ–¥—è—â–æ)

Solution:
#!/bin/bash

if [[ ${#} -ne 1 ]]; then
    echo "Illegal arguments count"
    exit 1
fi

if [[ ! -f ${1} ]]; then
    echo "The argument must be a file"
    exit 2
fi

filename="${1}"
temp_file=$(mktemp)

cat "${filename}" | grep -E -o '".*' | awk '{print NR ".", $0}' >> "${temp_file}"
sort -t '"' -k 2,2 "${temp_file}"

rm -f "${temp_file}"
--------------------------------------------------------
 –ó–∞–¥. 23 2017-IN-01
–ù–∞–ø–∏—à–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç, –∫–æ–π—Ç–æ –ø—Ä–∏–µ–º–∞ —Ç—Ä–∏ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ –ø–æ–∑–∏—Ü–æ–Ω–Ω–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞:
 ‚Ä¢ –∏–º–µ –Ω–∞ —Ñ–∞–∏–ª
 ‚Ä¢ –Ω–∏–∑1
 ‚Ä¢ –Ω–∏–∑2
 –§–∞–π–ª—ä—Ç –µ —Ç–µ–∫—Å—Ç–æ–≤–∏, –∏ —Å—ä–¥—ä—Ä–∂–∞ —Ä–µ–¥–æ–≤–µ –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç:
 –∫–ª—é—á=—Å—Ç–æ–π–Ω–æ—Å—Ç
 –∫—ä–¥–µ—Ç–æ —Å—Ç–æ–π–Ω–æ—Å—Ç –º–æ–∂–µ –¥–∞ –±—ä–¥–µ:
 ‚Ä¢ –ø—Ä–∞–∑–µ–Ω –Ω–∏–∑, —Ç.–µ. —Ä–µ–¥—ä—Ç –µ –∫–ª—é—á=
 ‚Ä¢ –Ω–∏–∑, —Å—ä—Å—Ç–æ—è—â —Å–µ –æ—Ç –µ–¥–∏–Ω –∏–ª–∏–ø–æ–≤–µ—á–µ —Ç–µ—Ä–º–æ–≤–µ, —Ä–∞–∑–¥–µ–ª–µ–Ω–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–∏, —Ç.–µ., —Ä–µ–¥—ä—Ç –µ –∫–ª—é—á=ùë°1 ùë°2 ùë°3
 –ù—è–∫—ä–¥–µ –≤—ä–≤ —Ñ–∞–π–ª–∞:
 ‚Ä¢ —Å–µ —Å—ä–¥—ä—Ä–∂–∞ –µ–¥–∏–Ω —Ä–µ–¥ —Å –∫–ª—é—á –ø—ä—Ä–≤–∏—è –ø–æ–¥–∞–¥–µ–Ω –Ω–∏–∑(–Ω–∏–∑1);
 ‚Ä¢ –∏ –º–æ–∂–µ –¥–∞ —Å–µ —Å—ä–¥—ä—Ä–∂–∞ –µ–¥–∏–Ω —Ä–µ–¥ —Å –∫–ª—é—á –≤—Ç–æ—Ä–∏—è –ø–æ–¥–∞–¥–µ–Ω –Ω–∏–∑(–Ω–∏–∑2).
 –°–∫—Ä–∏–ø—Ç—ä—Ç —Ç—Ä—è–±–≤–∞ –¥–∞ –ø—Ä–æ–º–µ–Ω—è —Ä–µ–¥–∞ —Å –∫–ª—é—á –Ω–∏–∑2 —Ç–∞–∫–∞, —á–µ –æ–±–µ–¥–∏–Ω–µ–Ω–∏–µ—Ç–æ –Ω–∞ —Ç–µ—Ä–º–æ–≤–µ—Ç–µ –Ω–∞ —Ä–µ–¥–æ–≤–µ—Ç–µ —Å –∫–ª—é—á–æ–≤–µ –Ω–∏–∑1 –∏ –Ω–∏–∑2 –¥–∞ –≤–∫–ª—é—á–≤–∞ –≤—Å–µ–∫–∏ —Ç–µ—Ä–º –µ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ.

Solution:
#!/bin/bash

if [[ ${#} -ne 3 ]]; then
    echo "Illegal arguments count"
    exit 1
fi

if [[ ! -f "${1}" ]]; then
    echo "Argument 1 must be a file"
    exit 2
fi

if [[ -z "${2}" ]]; then
    echo "Argument 2 must a non-empty string"
    exit 3
fi

if [[ -z "${3}" ]]; then
    echo "Argument 3 must a non-empty string"
    exit 4
fi

stringOne="${2}"
stringTwo="${3}"

if ! grep -q "${stringTwo}=" "${1}"; then
    exit 0
fi

tempFileA=$(mktemp)
tempFileB=$(mktemp)

argumentsA=$(grep -E "${stringOne}=" "${1}" | cut -d '=' -f 2)
argumentsB=$(grep -E "${stringTwo}=" "${1}" | cut -d '=' -f 2)

echo ${argumentsA} | tr ' ' '\n' | sort >> ${tempFileA}
echo ${argumentsB} | tr ' ' '\n' | sort >> ${tempFileB}

uniqueArgumentsB=$(comm -1 -3 ${tempFileA} ${tempFileB} | tr '\n' ' ')

sed -E -i "s/${stringTwo}=${argumentsB}/${stringTwo}=${uniqueArgumentsB}/g" "${1}"

rm -f "${tempFileA}"
rm -f "${tempFileB}"

--------------------------------------------------------
–ó–∞–¥.24 2017-IN-02 
–ù–∞–ø–∏—à–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç,–∫–æ–π—Ç–æ –ø—Ä–∏–µ–º–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–µ–Ω –ø–æ–∑–∏—Ü–∏–æ–Ω–µ–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –∏–º–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª FOO.
–ê–∫–æ —Å–∫—Ä–∏–ø—Ç—ä—Ç —Å–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ –æ—Ç root:
 –∞) –¥–∞ –∏–∑–≤–µ–∂–¥–∞ –∏–º–µ–Ω–∞—Ç–∞ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏—Ç–µ, –∫–æ–∏—Ç–æ –∏–º–∞—Ç –ø–æ–≤–µ—á–µ –Ω–∞ –±—Ä–æ–π –ø—Ä–æ—Ü–µ—Å–∏ –æ—Ç FOO, –∞–∫–æ –∏–º–∞ —Ç–∞
–∫–∏–≤–∞;
 –±) –¥–∞ –∏–∑–≤–µ–∂–¥–∞ —Å—Ä–µ–¥–Ω–æ—Ç–æ –≤—Ä–µ–º–µ (–≤ —Å–µ–∫—É–Ω–¥–∏), –∑–∞ –∫–æ–µ—Ç–æ —Å–∞ —Ä–∞–±–æ—Ç–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å–∏—Ç–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –Ω–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ (TIME, –≤—ä–≤ —Ñ–æ—Ä–º–∞—Ç HH:MM:SS);
 –≤) –∞–∫–æ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—Ç –ø—Ä–æ—Ü–µ—Å–∏ –Ω–∞ FOO, –∫–æ–∏—Ç–æ —Å–∞ —Ä–∞–±–æ—Ç–∏–ª–∏ –Ω–∞–¥ –¥–≤–∞ –ø—ä—Ç–∏ –ø–æ–≤–µ—á–µ –æ—Ç —Å—Ä–µ–¥–Ω–æ—Ç–æ –≤—Ä–µ–º–µ, —Å–∫—Ä–∏–ø—Ç—ä—Ç –¥–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ—Ç–æ –∏–º –ø–æ –ø–æ–¥—Ö–æ–¥—è—â –Ω–∞—á–∏–Ω.

Solution:
#!/bin/bash

if [[ ${#} -ne 1 ]]; then
    echo "Invalid arguments count"
    exit 1
fi

if [[ ! $(id -u) -ne 0 ]]; then
    echo "Script must be run as root"
    exit 2
fi

#Subtask 1

allUsers=$(ps -e -o user=,pid=,time=)

userCountTable=$(echo "${allUsers}" | awk '{print $1}' | sort | uniq -c)

userCount=$(echo "${userCountTable}" | awk -v user="${1}" '$2==user {print $1}')

while read line; do
    currentCount=$(echo ${line} | cut -d ' ' -f 1)
    currentUser=$(echo ${line} | cut -d ' ' -f 2)

    if [[ ${currentCount} -gt ${userCount} ]]; then
        echo "${currentUser}"
    fi
done < <(echo "${userCountTable}")




#Subtask 2
sumTime=$(echo "${allUsers}" | awk '{print $3}' | awk -F ':' 'BEGIN {sum=0} {sum+=$1*3600+$2*60+$3} END {print sum}')
count=$(echo "${allUsers}" | wc -l)

averageTime=$(echo "${sumTime} ${count}" | awk '{print $1/$2}')
echo "Average time: " ${averageTime}



#Subtask 3
limit=$(echo "${averageTime}" | awk '{print $1*2}')

tempFile=$(mktemp)
while read line; do
    echo ${line} | awk -v user="${1}" '$1==user {print $2 ":" $3}' >> "${tempFile}"
done < <(echo "${allUsers}")

pidsFile=$(mktemp)
while read line; do
    echo ${line} | awk -F ':' -v avgLimit="${limit}" '$2*3600+$3*60+$4>avgLimit {print $1}' >> "${pidsFile}"
done < <(cat "${tempFile}")


while read line; do
    kill ${line}
done < <(cat "${pidsFile}")

rm -f ${tempFile}
rm -f ${pidsFile}
--------------------------------------------------------
 –ó–∞–¥. 25 2017-IN-03:
–ù–∞–ø–∏—à–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç, –∫–æ–π—Ç–æ –∏–∑–≤–µ–∂–¥–∞ –∏–º–µ—Ç–æ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–∏—è –∞–∫–∞—É–Ω—Ç, –≤ —á–∏—è—Ç–æ home –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∏–º–∞ –Ω–∞–π-—Å–∫–æ—Ä–æ –ø—Ä–æ–º–µ–Ω–µ–Ω –æ–±–∏–∫–Ω–æ–≤–µ–Ω —Ñ–∞–π–ª –∏ –∫–æ–π –µ —Ç–æ–∑–∏ —Ñ–∞–π–ª.
–ù–∞–ø–∏—à–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç–∞ —Å –ø–æ–¥—Ö–æ–¥—è—â–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, —Ç–∞–∫–∞ —á–µ –¥–∞ –±—ä–¥–µ –≤–∞–ª–∏–¥–µ–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç.

Solution:
#!/bin/bash

line=$(find /home -type f -printf '%T@ %u %p\n' 2>/dev/null | sort -nr | head -n 1)

echo ${line} | cut -d ' ' -f 2
echo ${line} | cut -d ' ' -f 3,3
--------------------------------------------------------
--------------------------------------------------------

